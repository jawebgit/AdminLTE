{"version":3,"sources":["../src/Layout.js"],"names":[],"mappings":";;;;;;;;;;;;;AAOA,IAAM,SAAU,UAAC,CAAD,EAAO;AACrB;;;;;;;AAOA,MAAM,OAAqB,QAA3B;AACA,MAAM,WAAqB,YAA3B;AACA,MAAM,kBAAyB,QAA/B;AACA,MAAM,qBAAqB,EAAE,EAAF,CAAK,IAAL,CAA3B;;AAEA,MAAM,QAAQ;AACZ,aAAS;AADG,GAAd;;AAIA,MAAM,WAAW;AACf,aAAS,eADM;AAEf,YAAQ,cAFO;AAGf,aAAS,kBAHM;AAIf,oBAAgB,iBAJD;AAKf,aAAS,UALM;AAMf,qBAAiB,kBANF;AAOf,kBAAc,eAPC;AAQf,YAAQ;AARO,GAAjB;;AAWA,MAAM,YAAY;AAChB,UAAM,iBADU;AAEhB,aAAS,cAFO;AAGhB,kBAAc;AAHE,GAAlB;;;;;;;AA5BqB,MAuCf,MAvCe;AAyCnB,oBAAY,OAAZ,EAAqB;AAAA;;AACnB,WAAK,QAAL,GAAgB,OAAhB;;AAEA,WAAK,KAAL;AACD;;;;AA7CkB;AAAA;AAAA,wCAiDD;AAChB,YAAI,UAAU,CACZ,EAAE,MAAF,EAAU,MAAV,EADY,EAEZ,EAAE,SAAS,MAAX,EAAmB,WAAnB,EAFY,EAGZ,EAAE,SAAS,MAAX,EAAmB,WAAnB,EAHY,CAAd;;AAMA,UAAE,SAAS,OAAX,EAAoB,GAApB,CAAwB,YAAxB,EAAsC,QAAQ,CAAR,KAAc,QAAQ,CAAR,IAAa,QAAQ,CAAR,CAA3B,CAAtC;AACA,gBAAQ,GAAR,CAAY,QAAQ,CAAR,KAAc,QAAQ,CAAR,IAAa,QAAQ,CAAR,CAA3B,CAAZ;AACD;;;;AA1DkB;AAAA;AAAA,8BA8DX;AAAA;;AACN,UAAE,MAAF,EAAU,WAAV,CAAsB,UAAU,IAAhC;;AAEA,aAAK,eAAL;AACA,UAAE,SAAS,OAAX,EAAoB,EAApB,CAAuB,8CAAvB,EAAuE,YAAM;AAC3E,gBAAK,eAAL;AACD,SAFD;AAGA,UAAE,MAAF,EAAU,MAAV,CAAiB,YAAM;AACrB,gBAAK,eAAL;AACD,SAFD;AAGD;AAxEkB;AAAA;AAAA,2BA0Ed,OA1Ec,EA0EL;AACZ,YAAI,MAAM,CAAV;;AAEA,gBAAQ,OAAR,CAAgB,UAAC,CAAD,EAAO;AACrB,cAAI,IAAI,GAAR,EAAa;AACX,kBAAM,CAAN;AACD;AACF,SAJD;;AAMA,eAAO,GAAP;AACD;;;;AApFkB;AAAA;AAAA,uCAwFK,SAxFL,EAwFgB;AACjC,eAAO,KAAK,IAAL,CAAU,YAAY;AAC3B,cAAI,OAAO,EAAE,IAAF,EAAQ,IAAR,CAAa,QAAb,CAAX;;AAEA,cAAI,CAAC,IAAL,EAAW;AACT,mBAAO,IAAI,MAAJ,CAAW,IAAX,CAAP;AACA,cAAE,IAAF,EAAQ,IAAR,CAAa,QAAb,EAAuB,IAAvB;AACD;;AAED,cAAI,SAAJ,EAAe;AACb,iBAAK,SAAL;AACD;AACF,SAXM,CAAP;AAYD;AArGkB;;AAAA;AAAA;;;;;;;AA6GrB,IAAE,EAAF,CAAK,IAAL,IAAa,OAAO,gBAApB;AACA,IAAE,EAAF,CAAK,IAAL,EAAW,WAAX,GAAyB,MAAzB;AACA,IAAE,EAAF,CAAK,IAAL,EAAW,UAAX,GAAyB,YAAY;AACnC,MAAE,EAAF,CAAK,IAAL,IAAa,kBAAb;AACA,WAAO,OAAO,gBAAd;AACD,GAHD;;AAKA,SAAO,MAAP;AAED,CAtHc,CAsHZ,MAtHY,CAAf","file":"Layout.js","sourcesContent":["/**\n * --------------------------------------------\n * AdminLTE Layout.js\n * License MIT\n * --------------------------------------------\n */\n\nconst Layout = (($) => {\n  'use strict'\n\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  const NAME               = 'Layout'\n  const DATA_KEY           = 'lte.layout'\n  const EVENT_KEY          = `.${DATA_KEY}`\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\n\n  const Event = {\n    SIDEBAR: 'sidebar'\n  }\n\n  const Selector = {\n    SIDEBAR: '.main-sidebar',\n    HEADER: '.main-header',\n    CONTENT: '.content-wrapper',\n    CONTENT_HEADER: '.content-header',\n    WRAPPER: '.wrapper',\n    CONTROL_SIDEBAR: '.control-sidebar',\n    LAYOUT_FIXED: '.layout-fixed',\n    FOOTER: '.main-footer'\n  }\n\n  const ClassName = {\n    HOLD: 'hold-transition',\n    SIDEBAR: 'main-sidebar',\n    LAYOUT_FIXED: 'layout-fixed'\n  }\n\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  class Layout {\n\n    constructor(element) {\n      this._element = element\n\n      this._init()\n    }\n\n    // Public\n\n    fixLayoutHeight() {\n      let heights = [\n        $(window).height(),\n        $(Selector.HEADER).outerHeight(),\n        $(Selector.FOOTER).outerHeight()\n      ]\n\n      $(Selector.CONTENT).css('min-height', heights[0] - (heights[1] + heights[2]))\n      console.log(heights[0] - (heights[1] + heights[2]))\n    }\n\n    // Private\n\n    _init() {\n      $('body').removeClass(ClassName.HOLD)\n\n      this.fixLayoutHeight()\n      $(Selector.SIDEBAR).on('collapsed.lte.treeview expanded.lte.treeview', () => {\n        this.fixLayoutHeight()\n      })\n      $(window).resize(() => {\n        this.fixLayoutHeight()\n      })\n    }\n\n    _max(numbers) {\n      let max = 0\n\n      numbers.forEach((v) => {\n        if (v > max) {\n          max = v\n        }\n      })\n\n      return max\n    }\n\n    // Static\n\n    static _jQueryInterface(operation) {\n      return this.each(function () {\n        let data = $(this).data(DATA_KEY)\n\n        if (!data) {\n          data = new Layout(this)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (operation) {\n          data[operation]()\n        }\n      })\n    }\n  }\n\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $.fn[NAME] = Layout._jQueryInterface\n  $.fn[NAME].Constructor = Layout\n  $.fn[NAME].noConflict  = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return Layout._jQueryInterface\n  }\n\n  return Layout\n\n})(jQuery)\n"]}